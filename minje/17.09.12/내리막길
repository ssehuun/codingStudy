#include <stdio.h>
int d[501][501];
int map[501][501];
int dy[4] = {1, -1, 0, 0};
int dx[4] = {0, 0, 1, -1};
int N, M;
int go(int x, int y) {
	if (d[x][y]) return d[x][y];
	if (x == N - 1 && y == M - 1) {

		return 1;

	}
	int &ans = d[x][y];
	for (int i = 0; i < 4; i++) {
		int nx = x + dx[i];
		int ny = y + dy[i];
		if (0 <= nx && 0 <= ny&&N > nx&&M > ny) {
			if (map[nx][ny] < map[x][y]) ans = ans + go(nx, ny);
		}

	}
	return ans;
}
int main() {
	
	scanf("%d %d",&N,&M);
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			scanf("%d", &map[i][j]);
		}
	}
	printf("%d\n", go(0, 0));

	return 0;
}
